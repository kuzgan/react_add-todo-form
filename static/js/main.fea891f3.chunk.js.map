{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","users","todo","className","href","find","user","TodoInfo","maxId","TodoList","todos","map","Math","max","el","App","useState","setTitle","selectedUser","setSelectedUser","showTitleMessage","setShowTitleMessage","showUserMessage","setShowUserMessage","usersFromServer","todosFromServer","pattern","action","method","onSubmit","event","preventDefault","htmlFor","type","placeholder","value","onChange","test","target","disabled","defaultChecked","onClick","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fea891f3.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { Todo } from '../../type/todo';\nimport { User } from '../../type/user';\n\ntype Props = {\n  users: User[],\n  todo: Todo\n};\n\nexport const UserInfo = ({ users, todo }: Props) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${users.find(user => user.id === todo.userId)?.email}`}>\n      {users.find(user => user.id === todo.userId)?.name}\n    </a>\n  );\n};\n","import { Todo } from '../../type/todo';\nimport { User } from '../../type/user';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n  users: Array<User>\n  maxId: number\n};\n\nexport const TodoInfo = ({ todo, users, maxId }: Props) => {\n  return (\n    <article\n      data-id={maxId}\n      className={todo.completed\n        ? 'TodoInfo TodoInfo--completed'\n        : 'TodoInfo'}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      <UserInfo todo={todo} users={users} />\n    </article>\n  );\n};\n","import { Todo } from '../../type/todo';\nimport { User } from '../../type/user';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n  users: User[]\n};\n\nexport const TodoList = ({ todos, users }: Props) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => {\n        return (\n          <TodoInfo\n            maxId={Math.max(...todos.map(el => el.id))}\n            todo={todo}\n            users={users}\n          />\n        );\n      })}\n\n    </section>\n  );\n};\n","import './App.scss';\n\nimport { FormEventHandler, useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\nimport { User } from './type/user';\nimport { Todo } from './type/todo';\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState('');\n  const [showTitleMessage, setShowTitleMessage] = useState(false);\n  const [showUserMessage, setShowUserMessage] = useState(false);\n  const users: User[] = usersFromServer;\n  const todos: Todo[] = todosFromServer;\n  const pattern = /^[a-zA-Z0-9]+$/;\n\n  const handleSubmit: FormEventHandler = (event) => {\n    event.preventDefault();\n    if (title !== '' && selectedUser !== '') {\n      setTitle('');\n      setSelectedUser('');\n    }\n  };\n\n  const handleClick = () => {\n    if (title === '') {\n      setShowTitleMessage(true);\n    }\n\n    if (selectedUser === '') {\n      setShowUserMessage(true);\n    }\n\n    if (title !== '' && selectedUser !== '') {\n      todos.push({\n        id: Math.max(...todos.map(todo => todo.id)) + 1,\n        title,\n        completed: false,\n        userId: users.find((user) => user.name === selectedUser)?.id as number,\n      });\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/todos\" method=\"POST\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            id=\"title\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={(event) => {\n              if (pattern.test(event.target.value)) {\n                setTitle(event.target.value);\n                setShowTitleMessage(false);\n              }\n            }}\n          />\n          {showTitleMessage\n           && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelected\">User: </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"userSelected\"\n            value={selectedUser}\n            onChange={(event) => {\n              setSelectedUser(event.target.value);\n              setShowUserMessage(false);\n            }}\n          >\n            <option value=\"\" disabled defaultChecked>\n              Choose a user\n            </option>\n            {usersFromServer.map((user) => {\n              return <option>{user.name}</option>;\n            })}\n          </select>\n\n          {showUserMessage\n           && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\" onClick={handleClick}>\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} users={users} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}